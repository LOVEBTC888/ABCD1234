import{_ as r,M as a,p as c,q as d,Q as t,t as e,N as n,V as o,a1 as i}from"./framework-2ecd7faa.js";const h={},p=i('<h1 id="releasing" tabindex="-1"><a class="header-anchor" href="#releasing" aria-hidden="true">#</a> Releasing</h1><div class="custom-container danger"><p class="custom-container-title">Important!</p><p>Note: The following checklist is for committers only!</p><p>For people who want to contribute a pull request, this isn&#39;t relevant!</p></div><div class="custom-container tip"><p class="custom-container-title">Branch</p><p>All new work should be done in the <code>dev</code> branch.</p></div><h2 id="to-begin-a-new-version" tabindex="-1"><a class="header-anchor" href="#to-begin-a-new-version" aria-hidden="true">#</a> To begin a new version:</h2><p>[_] Run the script <code>./start-version.sh ${version}</code>.</p><p>[_] Check in the changed files.</p><h2 id="to-release-a-new-version-this-checklist-should-be-followed" tabindex="-1"><a class="header-anchor" href="#to-release-a-new-version-this-checklist-should-be-followed" aria-hidden="true">#</a> To release a new version, this checklist should be followed:</h2><p>[_] Get all commits since the last release with <code>git log &gt; temp.txt</code>.</p>',8),u=t("a",{href:"../docs"},"docs",-1),b=i(`<p>[_] Create a docker instance with <code>./docker-start.sh</code>.</p><p>[_] Minify the various library versions with <code>npm run build</code>.</p><p>[_] Update all personal projects to see if anything breaks.</p><p>[_] Check the minified versions and other changed files in.</p><p>[_] Merge the <code>dev</code> branch into <code>main</code>.</p><p>[_] Push the merge to github with <code>git push</code>.</p><p>[_] Update npm with <code>npm publish</code> or <code>npm publish --tag beta</code>. To do this in docker:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>:/srv/app <span class="token parameter variable">-it</span> abcjs /bin/bash
<span class="token function">npm</span> login
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>[_] Build docs with <code>npm run docs:build</code>.</p><p>[_] Push the change that npm publish created with <code>git push</code>.</p><p>[_] Push new documentation with <code>./deploy-docs.sh</code>.</p><p>[_] On github, &quot;Draft a new release&quot;.</p><ul><li>Click &quot;releases&quot;.</li><li>Click &quot;draft a new release&quot;</li><li>The tag should be the release number (i.e. &quot;3.0.0&quot;)</li><li>The title should be &quot;Version 3.0.0 release&quot;</li><li>The description should be a couple sentences about what the release is.</li></ul><p>[_] Add the binary to https://github.com/paulrosen/historical-abcjs-versions.</p><p>[_] Read through all the issues to see if any should be closed.</p><p>[_] Update https://abcjs.net.</p>`,16),_={href:"https://wordpress.org/plugins/abc-notation/",target:"_blank",rel:"noopener noreferrer"},g=t("ul",null,[t("li",null,[e("Repo at: "),t("code",null,"svn checkout https://plugins.svn.wordpress.org/abc-notation/")]),t("li",null,[e("Make changes in "),t("code",null,"/trunk")]),t("li",null,[e('When ready to release, make tag with right-click trunk, subversion => Branch or Tag, then pick "any location" and change the location to '),t("code",null,".../tags/x.x.x"),e(" with the version number.")]),t("li",null,"check in all changed files.")],-1),m=t("p",null,"[_] Release a new version of the vscode extension.",-1);function v(k,f){const s=a("RouterLink"),l=a("ExternalLinkIcon");return c(),d("div",null,[p,t("p",null,[e("[_] Add a section to the top of "),n(s,{to:"/RELEASE.html"},{default:o(()=>[e("the release notes")]),_:1}),e(".")]),t("p",null,[e("[_] Be sure "),n(s,{to:"/"},{default:o(()=>[e("the read me file")]),_:1}),e(" is up to date, along with all the files in "),u,e(".")]),b,t("p",null,[e("[_] Release a new version of the "),t("a",_,[e("WordPress plugin"),n(l)]),e(".")]),g,m])}const x=r(h,[["render",v],["__file","releasing.html.vue"]]);export{x as default};
